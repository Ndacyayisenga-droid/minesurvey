version: 2.1
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-30
    environment:
      JVM_OPTS: -Xmx4g
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle.kts" }}-{{ checksum "app/build.gradle.kts" }}
      - run:
          name: Grant execution permission to Gradle Wrapper
          command: chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew cleanBuildCache assembleDebug
      - save_cache:
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper
          key: jars-{{ checksum "build.gradle.kts" }}-{{ checksum "app/build.gradle.kts" }}
      - run:
          name: Run Unit Tests
          command: ./gradlew lint testDebug
      - run:
          name: Run Integration Tests
          command: ./gradlew connectedDebugAndroidTest
      - run:
          name: Run Performance Tests
          command: ./gradlew assembleDebug createDebugCoverageReport connectedDebugAndroidTest jacocoTestReport
      - run:
          name: Run Code Analysis
          command: ./gradlew lint checkstyle findbugs pmd
      - run:
          name: Check Code Coverage
          command: ./gradlew jacocoTestReport
      - run:
          name: Run Security Scan
          command: ./gradlew dependencyCheckAnalyze
      - run:
          name: Perform Code Review
          command: ./gradlew crucibleReview
      - run:
          name: Deploy to Staging Environment
          command: ansible-playbook -i inventory/staging deploy.yml
      - run:
          name: Deploy to Production Environment
          command: ansible-playbook -i inventory/production deploy.yml
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results/testDebugUnitTest
